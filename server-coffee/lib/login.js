// Generated by CoffeeScript 1.3.3
(function() {
  var add_user, config, crypto, db, find_user, hash, update_user, user_exists, valid_password;

  crypto = require('crypto');

  config = require('./config');

  db = (require('./db')).AuthProvider;

  hash = function(msg) {
    return crypto.createHash('md5').update(msg).digest("hex");
  };

  add_user = function(user, call_back) {
    user.pass = hash(user.pass);
    return db.new_user(user, function(err, obj) {
      return call_back(err, obj);
    });
  };

  update_user = function(user, pass, call_back) {
    return db.update(user, hash(pass), function(err, obj) {
      return call_back(err, obj);
    });
  };

  find_user = function(user, call_back) {
    return db.find_user(user, function(err, obj) {
      return call_back(err, obj);
    });
  };

  valid_password = function(user, pass, call_back) {
    db.find_user(user, function(err, obj) {
      if (err) {
        return call_back(err);
      } else {
        if (obj && obj.pass === (hash(pass))) {
          return call_back(null, true);
        } else {
          return call_back(null, false);
        }
      }
    });
    return null;
  };

  user_exists = function(user, pass, call_back) {
    db.find_user(user, function(err, obj) {
      if (err) {
        return call_back(err);
      } else {
        if (obj && obj.user) {
          return call_back(null, true);
        } else {
          return call_back(null, false);
        }
      }
    });
    return null;
  };

  exports.add_user = add_user;

  exports.new_user = update_user;

  exports.find_user = find_user;

  exports.valid_password = valid_password;

  exports.user_exists = user_exists;

}).call(this);
